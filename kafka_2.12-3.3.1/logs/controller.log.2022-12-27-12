[2022-12-27 12:29:10,958] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-27 12:29:11,008] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-12-27 12:29:11,012] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2022-12-27 12:29:11,052] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-27 12:29:11,054] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-27 12:29:11,055] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-27 12:29:11,056] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-27 12:29:11,063] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-12-27 12:29:11,065] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-27 12:29:11,067] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-27 12:29:11,070] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-27 12:29:11,070] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-27 12:29:11,070] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-12-27 12:29:11,070] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-12-27 12:29:11,070] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-27 12:29:11,071] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-27 12:29:11,071] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-27 12:29:11,071] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-27 12:29:11,071] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-12-27 12:29:11,071] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-27 12:29:11,075] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:29:11,075] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:29:11,076] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:29:11,076] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:29:11,077] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:29:11,077] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:29:11,078] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:29:11,078] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-12-27 12:29:11,079] INFO [RequestSendThread controllerId=0] Controller 0 connected to anatoliys-imac.phub.net.cable.rogers.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-27 12:29:11,081] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-27 12:29:11,081] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-27 12:29:11,081] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-27 12:29:11,081] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-27 12:29:11,082] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-27 12:29:11,106] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-27 12:29:16,112] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:29:16,113] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:31:33,546] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-12-27 12:31:33,547] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-12-27 12:31:33,547] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-12-27 12:31:33,550] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-12-27 12:31:33,634] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-27 12:31:33,634] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-27 12:31:33,634] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-27 12:31:33,634] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-12-27 12:31:33,635] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-27 12:31:33,635] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:31:33,635] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:31:33,636] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-12-27 12:31:33,636] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-12-27 12:31:33,636] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-12-27 12:31:33,636] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-12-27 12:31:40,290] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-27 12:31:40,316] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-12-27 12:31:40,317] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-27 12:31:40,319] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-27 12:31:40,320] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-27 12:31:40,321] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-27 12:31:40,326] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 46) (kafka.controller.KafkaController)
[2022-12-27 12:31:40,330] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-27 12:31:40,332] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-27 12:31:40,335] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-27 12:31:40,335] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-27 12:31:40,336] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-12-27 12:31:40,336] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-12-27 12:31:40,336] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-27 12:31:40,337] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-27 12:31:40,337] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-27 12:31:40,337] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-27 12:31:40,338] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-12-27 12:31:40,338] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-27 12:31:40,341] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:31:40,342] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:31:40,344] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:31:40,344] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-12-27 12:31:40,344] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:31:40,348] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:31:40,349] INFO [RequestSendThread controllerId=0] Controller 0 connected to anatoliys-imac.phub.net.cable.rogers.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-27 12:31:40,350] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-12-27 12:31:40,350] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-12-27 12:31:40,353] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-27 12:31:40,354] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-27 12:31:40,354] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-27 12:31:40,354] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-27 12:31:40,354] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-27 12:31:40,378] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-27 12:31:45,385] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:31:45,386] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:32:20,780] INFO [Controller id=0] New topics: [Set(quickstart-events)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(quickstart-events,Some(00s7klJvQLWY8N8TxAZbmw),Map(quickstart-events-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-27 12:32:20,781] INFO [Controller id=0] New partition creation callback for quickstart-events-0 (kafka.controller.KafkaController)
[2022-12-27 12:33:27,733] INFO [Controller id=0] New topics: [Set(quickstart-noevents)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(quickstart-noevents,Some(glwQKGEJQHefN_jlABhxyQ),Map(quickstart-noevents-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-27 12:33:27,733] INFO [Controller id=0] New partition creation callback for quickstart-noevents-0 (kafka.controller.KafkaController)
[2022-12-27 12:36:45,396] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:36:45,398] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:36:45,402] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-27 12:36:45,405] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-27 12:39:07,550] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2022-12-27 12:39:07,571] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2022-12-27 12:39:33,511] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(1m4lJs62T2Wf2zdbP_jAFA),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-27 12:39:33,511] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-12-27 12:41:45,409] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:41:45,409] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:41:45,412] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-27 12:41:45,413] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-27 12:46:45,417] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:46:45,419] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:46:45,422] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-27 12:46:45,422] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-27 12:51:45,428] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:51:45,430] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:51:45,433] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-27 12:51:45,433] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-12-27 12:59:17,834] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-27 12:59:17,836] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-27 12:59:17,838] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-12-27 12:59:17,838] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
