[2022-12-29 19:54:31,580] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,582] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,583] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,583] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,583] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,583] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,585] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2022-12-29 19:54:31,586] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2022-12-29 19:54:31,586] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2022-12-29 19:54:31,586] WARN Either no config or no quorum defined in config, running in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2022-12-29 19:54:31,586] INFO Log4j 1.2 jmx support not found; jmx disabled. (org.apache.zookeeper.jmx.ManagedUtil)
[2022-12-29 19:54:31,587] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,587] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,587] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,587] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,587] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,587] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2022-12-29 19:54:31,587] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2022-12-29 19:54:31,593] INFO ServerMetrics initialized with provider org.apache.zookeeper.metrics.impl.DefaultMetricsProvider@a4102b8 (org.apache.zookeeper.server.ServerMetrics)
[2022-12-29 19:54:31,595] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2022-12-29 19:54:31,600] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO   ______                  _                                           (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO  |___  /                 | |                                          (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO     / /    ___     ___   | | __   ___    ___   _ __     ___   _ __    (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO    / /    / _ \   / _ \  | |/ /  / _ \  / _ \ | '_ \   / _ \ | '__| (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO   / /__  | (_) | | (_) | |   <  |  __/ |  __/ | |_) | |  __/ | |     (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO  /_____|  \___/   \___/  |_|\_\  \___|  \___| | .__/   \___| |_| (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO                                               | |                      (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO                                               |_|                      (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,600] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,613] INFO Server environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,613] INFO Server environment:host.name=anatoliys-imac.phub.net.cable.rogers.com (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,613] INFO Server environment:java.version=19.0.1 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:java.vendor=Oracle Corporation (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:java.home=/Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:java.class.path=/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/activation-1.1.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/aopalliance-repackaged-2.6.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/argparse4j-0.7.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/audience-annotations-0.5.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/commons-cli-1.4.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/commons-lang3-3.12.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/commons-lang3-3.8.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-api-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-basic-auth-extension-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-json-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-mirror-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-mirror-client-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-runtime-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/connect-transforms-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/hk2-api-2.6.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/hk2-locator-2.6.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/hk2-utils-2.6.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-annotations-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-core-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-databind-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-dataformat-csv-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-datatype-jdk8-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-jaxrs-base-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-jaxrs-json-provider-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-module-jaxb-annotations-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jackson-module-scala_2.12-2.13.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jakarta.activation-api-1.2.2.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jakarta.annotation-api-1.3.5.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jakarta.inject-2.6.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jakarta.validation-api-2.0.2.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jakarta.ws.rs-api-2.1.6.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jakarta.xml.bind-api-2.3.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/javassist-3.27.0-GA.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/javax.servlet-api-3.1.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/javax.ws.rs-api-2.1.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jaxb-api-2.3.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jersey-client-2.34.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jersey-common-2.34.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jersey-container-servlet-2.34.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jersey-container-servlet-core-2.34.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jersey-hk2-2.34.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jersey-server-2.34.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-client-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-continuation-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-http-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-io-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-security-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-server-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-servlet-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-servlets-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-util-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jetty-util-ajax-9.4.48.v20220622.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jline-3.21.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jopt-simple-5.0.4.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/jose4j-0.7.9.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-clients-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-log4j-appender-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-metadata-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-raft-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-server-common-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-shell-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-storage-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-storage-api-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-streams-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-streams-examples-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-streams-scala_2.12-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-streams-test-utils-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka-tools-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/kafka_2.12-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/lz4-java-1.8.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/maven-artifact-3.8.4.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/metrics-core-2.2.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/metrics-core-4.1.12.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-buffer-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-codec-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-common-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-handler-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-resolver-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-transport-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-transport-classes-epoll-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-transport-native-epoll-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/netty-transport-native-unix-common-4.1.78.Final.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/osgi-resource-locator-1.0.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/paranamer-2.8.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/plexus-utils-3.3.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/reflections-0.9.12.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/reload4j-1.2.19.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/rocksdbjni-6.29.4.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/scala-collection-compat_2.12-2.6.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/scala-java8-compat_2.12-1.0.2.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/scala-library-2.12.15.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/scala-logging_2.12-3.9.4.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/scala-reflect-2.12.15.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/slf4j-api-1.7.36.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/slf4j-reload4j-1.7.36.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/snappy-java-1.1.8.4.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/swagger-annotations-2.2.0.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/trogdor-3.3.1.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/zookeeper-3.6.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/zookeeper-jute-3.6.3.jar:/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1/bin/../libs/zstd-jni-1.5.2-1.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:java.library.path=/Users/anatoliyserputov/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:. (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:java.io.tmpdir=/var/folders/gz/vkp84x2s5nb1_6gx2szj48fm0000gn/T/ (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:os.name=Mac OS X (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:os.arch=aarch64 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:os.version=12.4 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:user.name=anatoliyserputov (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:user.home=/Users/anatoliyserputov (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:user.dir=/Users/anatoliyserputov/Desktop/stock/kafka_2.12-3.3.1 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:os.memory.free=492MB (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,614] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.enableEagerACLCheck = false (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.digest.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.closeSessionTxn.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.flushDelay=0 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.maxWriteQueuePollTime=0 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.maxBatchSize=1000 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO zookeeper.intBufferStartingSizeBytes = 1024 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,615] INFO Weighed connection throttling is disabled (org.apache.zookeeper.server.BlueThrottle)
[2022-12-29 19:54:31,616] INFO minSessionTimeout set to 6000 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,616] INFO maxSessionTimeout set to 60000 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,617] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
[2022-12-29 19:54:31,617] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
[2022-12-29 19:54:31,617] INFO zookeeper.pathStats.slotCapacity = 60 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
[2022-12-29 19:54:31,617] INFO zookeeper.pathStats.slotDuration = 15 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
[2022-12-29 19:54:31,617] INFO zookeeper.pathStats.maxDepth = 6 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
[2022-12-29 19:54:31,618] INFO zookeeper.pathStats.initialDelay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
[2022-12-29 19:54:31,618] INFO zookeeper.pathStats.delay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
[2022-12-29 19:54:31,618] INFO zookeeper.pathStats.enabled = false (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
[2022-12-29 19:54:31,620] INFO The max bytes for all large requests are set to 104857600 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,620] INFO The large request threshold is set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,620] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 clientPortListenBacklog -1 datadir /tmp/zookeeper/version-2 snapdir /tmp/zookeeper/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,627] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2022-12-29 19:54:31,628] WARN maxCnxns is not configured, using default value 0. (org.apache.zookeeper.server.ServerCnxnFactory)
[2022-12-29 19:54:31,629] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 16 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2022-12-29 19:54:31,631] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2022-12-29 19:54:31,639] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
[2022-12-29 19:54:31,639] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
[2022-12-29 19:54:31,639] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
[2022-12-29 19:54:31,639] INFO zookeeper.commitLogCount=500 (org.apache.zookeeper.server.ZKDatabase)
[2022-12-29 19:54:31,641] INFO zookeeper.snapshot.compression.method = CHECKED (org.apache.zookeeper.server.persistence.SnapStream)
[2022-12-29 19:54:31,642] INFO Reading snapshot /tmp/zookeeper/version-2/snapshot.eb2 (org.apache.zookeeper.server.persistence.FileSnap)
[2022-12-29 19:54:31,645] INFO The digest in the snapshot has digest version of 2, , with zxid as 0xeb2, and digest value as 344645465246 (org.apache.zookeeper.server.DataTree)
[2022-12-29 19:54:31,662] INFO ZooKeeper audit is disabled. (org.apache.zookeeper.audit.ZKAuditProvider)
[2022-12-29 19:54:31,663] INFO 1 txns loaded in 3 ms (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2022-12-29 19:54:31,663] INFO Snapshot loaded in 25 ms, highest zxid is 0xeb3, digest is 336435992234 (org.apache.zookeeper.server.ZKDatabase)
[2022-12-29 19:54:31,663] INFO Snapshotting: 0xeb3 to /tmp/zookeeper/version-2/snapshot.eb3 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2022-12-29 19:54:31,666] INFO Snapshot taken in 2 ms (org.apache.zookeeper.server.ZooKeeperServer)
[2022-12-29 19:54:31,671] INFO PrepRequestProcessor (sid:0) started, reconfigEnabled=false (org.apache.zookeeper.server.PrepRequestProcessor)
[2022-12-29 19:54:31,671] INFO zookeeper.request_throttler.shutdownTimeout = 10000 (org.apache.zookeeper.server.RequestThrottler)
[2022-12-29 19:54:31,678] INFO Using checkIntervalMs=60000 maxPerMinute=10000 maxNeverUsedIntervalMs=0 (org.apache.zookeeper.server.ContainerManager)
[2022-12-29 19:54:33,849] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2022-12-29 19:54:34,016] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2022-12-29 19:54:34,113] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Recovering unflushed segment 0. 0/1 recovered for __cluster_metadata-0. (kafka.log.LogLoader)
[2022-12-29 19:54:34,114] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:34,114] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Reloading from producer snapshot and rebuilding producer state from offset 0 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:34,116] INFO Deleted producer state snapshot /tmp/kraft-combined-logs/__cluster_metadata-0/00000000000000000002.snapshot (kafka.log.SnapshotFile)
[2022-12-29 19:54:34,116] INFO Deleted producer state snapshot /tmp/kraft-combined-logs/__cluster_metadata-0/00000000000000022665.snapshot (kafka.log.SnapshotFile)
[2022-12-29 19:54:34,117] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Producer state recovery took 3ms for snapshot load and 0ms for segment recovery from offset 0 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:34,227] INFO [ProducerStateManager partition=__cluster_metadata-0] Wrote producer snapshot at offset 22665 with 0 producer ids in 41 ms. (kafka.log.ProducerStateManager)
[2022-12-29 19:54:34,259] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Loading producer state till offset 22665 with message format version 2 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:34,259] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Reloading from producer snapshot and rebuilding producer state from offset 22665 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:34,263] INFO [ProducerStateManager partition=__cluster_metadata-0] Loading producer state from snapshot file 'SnapshotFile(/tmp/kraft-combined-logs/__cluster_metadata-0/00000000000000022665.snapshot,22665)' (kafka.log.ProducerStateManager)
[2022-12-29 19:54:34,268] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kraft-combined-logs] Producer state recovery took 9ms for snapshot load and 0ms for segment recovery from offset 22665 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:34,295] INFO Initialized snapshots with IDs Set() from /tmp/kraft-combined-logs/__cluster_metadata-0 (kafka.raft.KafkaMetadataLog$)
[2022-12-29 19:54:34,313] INFO [raft-expiration-reaper]: Starting (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
[2022-12-29 19:54:34,421] INFO [RaftManager nodeId=1] Completed transition to ResignedState(localId=1, epoch=2, voters=[1], electionTimeoutMs=1323, unackedVoters=[], preferredSuccessors=[]) (org.apache.kafka.raft.QuorumState)
[2022-12-29 19:54:34,453] INFO [RaftManager nodeId=1] Completed transition to CandidateState(localId=1, epoch=3, retries=1, electionTimeoutMs=1232) (org.apache.kafka.raft.QuorumState)
[2022-12-29 19:54:34,491] INFO [RaftManager nodeId=1] Completed transition to Leader(localId=1, epoch=3, epochStartOffset=22665, highWatermark=Optional.empty, voterStates={1=ReplicaState(nodeId=1, endOffset=Optional.empty, lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)}) (org.apache.kafka.raft.QuorumState)
[2022-12-29 19:54:34,544] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2022-12-29 19:54:34,545] INFO [kafka-raft-outbound-request-thread]: Starting (kafka.raft.RaftSendThread)
[2022-12-29 19:54:34,545] INFO [kafka-raft-io-thread]: Starting (kafka.raft.KafkaRaftManager$RaftIoThread)
[2022-12-29 19:54:34,546] INFO Starting controller (kafka.server.ControllerServer)
[2022-12-29 19:54:34,736] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2022-12-29 19:54:34,739] INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.DataPlaneAcceptor)
[2022-12-29 19:54:34,751] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(CONTROLLER) (kafka.network.SocketServer)
[2022-12-29 19:54:34,764] INFO [Controller 1] Creating new QuorumController with clusterId jYK2ixw7RfaVP6XBroxisA, authorizer Optional.empty. (org.apache.kafka.controller.QuorumController)
[2022-12-29 19:54:34,764] INFO [RaftManager nodeId=1] Registered the listener org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@399133364 (org.apache.kafka.raft.KafkaRaftClient)
[2022-12-29 19:54:34,768] INFO [Controller 1] Setting metadata.version to 7 (org.apache.kafka.controller.FeatureControlManager)
[2022-12-29 19:54:34,768] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,768] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,769] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,770] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,771] INFO [Controller 1] Added new fenced broker: 1 (org.apache.kafka.controller.ClusterControlManager)
[2022-12-29 19:54:34,771] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=1, incarnationId=r69uYBrRQcqcZ0X_QUZjTg, brokerEpoch=2, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='localhost', port=9092, securityProtocol=0)], features=[BrokerFeature(name='metadata.version', minSupportedVersion=1, maxSupportedVersion=7)], rack=null, fenced=true, inControlledShutdown=false) (org.apache.kafka.controller.ClusterControlManager)
[2022-12-29 19:54:34,772] INFO [Controller 1] Unfenced broker: 1 (org.apache.kafka.controller.ClusterControlManager)
[2022-12-29 19:54:34,773] INFO [Controller 1] Created topic events with topic ID ZifrlbdlRKeYRFd4ZulJeA. (org.apache.kafka.controller.ReplicationControlManager)
[2022-12-29 19:54:34,774] INFO [Controller 1] Created partition events-0 with topic ID ZifrlbdlRKeYRFd4ZulJeA and PartitionRegistration(replicas=[1], isr=[1], removingReplicas=[], addingReplicas=[], leader=1, leaderRecoveryState=RECOVERED, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
[2022-12-29 19:54:34,778] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,779] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
[2022-12-29 19:54:34,781] INFO [BrokerServer id=1] Transition from SHUTDOWN to STARTING (kafka.server.BrokerServer)
[2022-12-29 19:54:34,781] INFO [BrokerServer id=1] Starting broker (kafka.server.BrokerServer)
[2022-12-29 19:54:34,789] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,789] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,789] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,789] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-12-29 19:54:34,810] INFO [Controller 1] Fenced broker: 1 (org.apache.kafka.controller.ClusterControlManager)
[2022-12-29 19:54:34,810] INFO [Controller 1] Becoming the active controller at epoch 3, committed offset 22664, committed epoch 2 (org.apache.kafka.controller.QuorumController)
[2022-12-29 19:54:34,811] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-12-29 19:54:34,812] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Recorded new controller, from now on will use broker localhost:9093 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-12-29 19:54:34,828] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2022-12-29 19:54:34,829] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.DataPlaneAcceptor)
[2022-12-29 19:54:34,831] INFO [SocketServer listenerType=BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-12-29 19:54:34,834] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-12-29 19:54:34,834] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Recorded new controller, from now on will use broker localhost:9093 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-12-29 19:54:34,840] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,841] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,841] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,841] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,848] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,849] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,871] INFO [RaftManager nodeId=1] Registered the listener kafka.server.metadata.BrokerMetadataListener@117886304 (org.apache.kafka.raft.KafkaRaftClient)
[2022-12-29 19:54:34,871] INFO [BrokerToControllerChannelManager broker=1 name=heartbeat]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-12-29 19:54:34,871] INFO [BrokerToControllerChannelManager broker=1 name=heartbeat]: Recorded new controller, from now on will use broker localhost:9093 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-12-29 19:54:34,873] INFO [BrokerLifecycleManager id=1] Incarnation Sbf6AMBgR9SZ7U6GY6hXBg of broker 1 in cluster jYK2ixw7RfaVP6XBroxisA is now STARTING. (kafka.server.BrokerLifecycleManager)
[2022-12-29 19:54:34,886] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-12-29 19:54:34,909] INFO [Controller 1] Re-registered broker id 1: RegisterBrokerRecord(brokerId=1, incarnationId=Sbf6AMBgR9SZ7U6GY6hXBg, brokerEpoch=22665, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='localhost', port=9092, securityProtocol=0)], features=[BrokerFeature(name='metadata.version', minSupportedVersion=1, maxSupportedVersion=7)], rack=null, fenced=true, inControlledShutdown=false) (org.apache.kafka.controller.ClusterControlManager)
[2022-12-29 19:54:34,939] INFO [BrokerLifecycleManager id=1] Successfully registered broker 1 with broker epoch 22665 (kafka.server.BrokerLifecycleManager)
[2022-12-29 19:54:34,974] INFO [BrokerLifecycleManager id=1] The broker has caught up. Transitioning from STARTING to RECOVERY. (kafka.server.BrokerLifecycleManager)
[2022-12-29 19:54:34,976] INFO [BrokerMetadataListener id=1] Starting to publish metadata events at offset 22666. (kafka.server.metadata.BrokerMetadataListener)
[2022-12-29 19:54:34,976] INFO [BrokerMetadataPublisher id=1] Publishing initial metadata at offset OffsetAndEpoch(offset=22666, epoch=3) with metadata.version 3.3-IV3. (kafka.server.metadata.BrokerMetadataPublisher)
[2022-12-29 19:54:34,977] INFO Loading logs from log dirs ArrayBuffer(/tmp/kraft-combined-logs) (kafka.log.LogManager)
[2022-12-29 19:54:34,977] INFO Skipping recovery for all logs in /tmp/kraft-combined-logs since clean shutdown file was found (kafka.log.LogManager)
[2022-12-29 19:54:34,987] INFO [BrokerLifecycleManager id=1] The broker is in RECOVERY. (kafka.server.BrokerLifecycleManager)
[2022-12-29 19:54:35,003] INFO [LogLoader partition=events-0, dir=/tmp/kraft-combined-logs] Loading producer state till offset 11383 with message format version 2 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:35,003] INFO [LogLoader partition=events-0, dir=/tmp/kraft-combined-logs] Reloading from producer snapshot and rebuilding producer state from offset 11383 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:35,003] INFO [ProducerStateManager partition=events-0] Loading producer state from snapshot file 'SnapshotFile(/tmp/kraft-combined-logs/events-0/00000000000000011383.snapshot,11383)' (kafka.log.ProducerStateManager)
[2022-12-29 19:54:35,003] INFO [LogLoader partition=events-0, dir=/tmp/kraft-combined-logs] Producer state recovery took 0ms for snapshot load and 0ms for segment recovery from offset 11383 (kafka.log.UnifiedLog$)
[2022-12-29 19:54:35,005] INFO Completed load of Log(dir=/tmp/kraft-combined-logs/events-0, topicId=ZifrlbdlRKeYRFd4ZulJeA, topic=events, partition=0, highWatermark=0, lastStableOffset=0, logStartOffset=0, logEndOffset=11383) with 1 segments in 24ms (1/1 completed in /tmp/kraft-combined-logs) (kafka.log.LogManager)
[2022-12-29 19:54:35,006] INFO Loaded 1 logs in 30ms. (kafka.log.LogManager)
[2022-12-29 19:54:35,006] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2022-12-29 19:54:35,007] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2022-12-29 19:54:35,028] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2022-12-29 19:54:35,028] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2022-12-29 19:54:35,029] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2022-12-29 19:54:35,029] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-12-29 19:54:35,030] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2022-12-29 19:54:35,030] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-12-29 19:54:35,033] INFO [BrokerMetadataPublisher id=1] Updating metadata.version to 7 at offset OffsetAndEpoch(offset=22666, epoch=3). (kafka.server.metadata.BrokerMetadataPublisher)
[2022-12-29 19:54:35,048] INFO [Partition events-0 broker=1] Log loaded for partition events-0 with initial high watermark 11383 (kafka.cluster.Partition)
[2022-12-29 19:54:35,049] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(events-0) (kafka.server.ReplicaFetcherManager)
[2022-12-29 19:54:35,057] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://localhost:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = CONTROLLER
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = [1@localhost:9093]
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	early.start.listeners = null
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = PLAINTEXT
	inter.broker.protocol.version = 3.3-IV3
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://:9092,CONTROLLER://:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kraft-combined-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.idle.interval.ms = 500
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	node.id = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = [broker, controller]
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	sasl.server.max.receive.size = 524288
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.listen.backlog.size = 50
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = null
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
 (kafka.server.KafkaConfig)
[2022-12-29 19:54:35,059] INFO [SocketServer listenerType=BROKER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
[2022-12-29 19:54:35,061] INFO [Controller 1] The request from broker 1 to unfence has been granted because it has caught up with the offset of it's register broker record 22665. (org.apache.kafka.controller.BrokerHeartbeatManager)
[2022-12-29 19:54:35,089] INFO [Controller 1] handleBrokerUnfenced: changing 1 partition(s) (org.apache.kafka.controller.ReplicationControlManager)
[2022-12-29 19:54:35,089] INFO [Controller 1] Unfenced broker: 1 (org.apache.kafka.controller.ClusterControlManager)
[2022-12-29 19:54:35,121] INFO [BrokerLifecycleManager id=1] The broker has been unfenced. Transitioning from RECOVERY to RUNNING. (kafka.server.BrokerLifecycleManager)
[2022-12-29 19:54:35,121] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(events-0) (kafka.server.ReplicaFetcherManager)
[2022-12-29 19:54:35,153] INFO [BrokerServer id=1] Transition from STARTING to STARTED (kafka.server.BrokerServer)
[2022-12-29 19:54:35,153] INFO Kafka version: 3.3.1 (org.apache.kafka.common.utils.AppInfoParser)
[2022-12-29 19:54:35,153] INFO Kafka commitId: e23c59d00e687ff5 (org.apache.kafka.common.utils.AppInfoParser)
[2022-12-29 19:54:35,153] INFO Kafka startTimeMs: 1672361675153 (org.apache.kafka.common.utils.AppInfoParser)
[2022-12-29 19:54:35,154] INFO [KafkaRaftServer nodeId=1] Kafka Server started (kafka.server.KafkaRaftServer)
[2022-12-29 19:54:36,729] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_FETCH, apiVersion=0, clientId=kafka-node-client, correlationId=3) -- OffsetFetchRequestData(groupId='kafka-node-group', topics=[OffsetFetchRequestTopic(name='events', partitionIndexes=[0])], groups=[], requireStable=false) with context RequestContext(header=RequestHeader(apiKey=OFFSET_FETCH, apiVersion=0, clientId=kafka-node-client, correlationId=3), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset fetch requests
[2022-12-29 19:54:36,932] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=6) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11383, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=6), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:54:41,998] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=57) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11386, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=57), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:54:47,004] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=108) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11391, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=108), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:54:52,020] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=159) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11396, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=159), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:54:57,033] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=210) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11401, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=210), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:02,086] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=262) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11407, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=262), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:07,114] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=313) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11412, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=313), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:12,206] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=365) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11417, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=365), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:17,208] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=416) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11422, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=416), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:22,219] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=467) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11427, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=467), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:27,228] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=518) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11432, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=518), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:32,235] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=569) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11437, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=569), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:37,242] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=620) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11442, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=620), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:42,250] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=671) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11447, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=671), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:47,358] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=723) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11452, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=723), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:52,461] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=775) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11457, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=775), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:55:57,471] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=826) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11462, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=826), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:02,476] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=877) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11467, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=877), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:07,482] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=928) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11472, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=928), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:12,484] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=979) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11477, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=979), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:17,500] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1030) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11482, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1030), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:22,501] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1081) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11487, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1081), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:27,605] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1133) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11492, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1133), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:32,618] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1184) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11497, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1184), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:37,628] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1235) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11502, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1235), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:42,728] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1287) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11507, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1287), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:47,734] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1338) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11512, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1338), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:52,752] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1389) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11517, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1389), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:56:57,754] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1440) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11522, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1440), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:02,759] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1491) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11527, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1491), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:07,773] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1542) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11532, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1542), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:12,783] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1593) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11537, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1593), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:17,790] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1644) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11542, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1644), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:22,888] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1696) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11547, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1696), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:27,896] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1747) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11552, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1747), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:33,000] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1799) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11557, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1799), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:38,009] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1850) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11562, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1850), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:43,018] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1901) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11567, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1901), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:48,022] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1952) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11572, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=1952), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:53,028] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2003) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11577, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2003), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:57:58,036] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2054) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11582, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2054), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:03,044] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2105) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11587, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2105), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:08,049] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2156) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11592, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2156), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:13,056] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2207) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11597, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2207), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:18,058] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2258) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11602, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2258), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:23,072] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2309) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11607, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2309), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:28,076] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2360) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11612, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2360), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:33,086] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2411) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11617, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2411), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:38,091] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2462) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11622, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2462), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:43,094] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2513) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11627, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2513), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:48,102] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2564) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11632, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2564), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:53,106] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2615) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11637, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2615), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:58:58,117] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2666) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11642, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2666), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:03,120] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2717) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11647, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2717), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:08,223] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2769) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11652, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2769), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:13,235] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2820) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11657, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2820), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:18,240] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2871) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11662, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2871), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:23,243] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2922) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11667, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2922), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:28,255] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2973) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11672, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=2973), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:33,255] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3024) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11677, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3024), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:38,267] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3075) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11682, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3075), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:43,283] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3126) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11687, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3126), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:48,290] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3177) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11692, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3177), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:53,297] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3228) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11697, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3228), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
[2022-12-29 19:59:58,310] ERROR [KafkaApi-1] Unexpected error handling request RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3279) -- OffsetCommitRequestData(groupId='kafka-node-group', generationId=-1, memberId='', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='events', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=11702, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='m')])]) with context RequestContext(header=RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=0, clientId=kafka-node-client, correlationId=3279), connectionId='0:0:0:0:0:0:0:1:9092-0:0:0:0:0:0:0:1:53168-0', clientAddress=/0:0:0:0:0:0:0:1, principal=User:ANONYMOUS, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT, clientInformation=ClientInformation(softwareName=unknown, softwareVersion=unknown), fromPrivilegedListener=true, principalSerde=Optional[org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder@54362233]) (kafka.server.KafkaApis)
org.apache.kafka.common.errors.UnsupportedVersionException: Unsupported when using a Raft-based metadata quorum: Version 0 offset commit requests
